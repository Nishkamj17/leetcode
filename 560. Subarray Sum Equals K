class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        int n = nums.size();
        if (n == 0)
            return 0;
        
        unordered_map<int, int> mymap;
        int curSUM = 0;
        int count = 0;
        int i = 0;
        
        while(i < n)
        {
            curSUM += nums[i];
            
            if (curSUM == k)
                count += 1;
            
            if (mymap.find(curSUM - k) != mymap.end())
                count += mymap[curSUM - k];
            
            mymap[curSUM] += 1;
            i += 1;
        }
        return count;
    }
};
