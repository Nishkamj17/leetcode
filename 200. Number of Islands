class Solution {
public:
    void mark_current_island(vector<vector<char>>& grid, int i, int j, int r, int c)
    {
        if (i < 0 || i >= r || j < 0 || j>=c || grid[i][j] != '1')
        {
            return;
        }
        
        grid[i][j] = '0';
        mark_current_island(grid, i+1, j, r, c);
        mark_current_island(grid, i, j+1, r, c);
        mark_current_island(grid, i-1, j, r, c);
        mark_current_island(grid, i, j-1, r, c);
    }
    int numIslands(vector<vector<char>>& grid) {
        int rows = grid.size();
        if (rows == 0)
            return 0;
        int cols = grid[0].size();
        
        int no_of_islands = 0;
        
        for (int i = 0; i < rows; i++)
        {
            for (int j = 0; j < cols; j++)
            {
                if (grid[i][j] == '1')
                {
                    mark_current_island(grid, i, j, rows, cols);
                    no_of_islands += 1;
                }
            }
        }
        return no_of_islands;
    }
};
