/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    void inNodeBST(TreeNode *root, vector<int> &vec)
    {
        if (root == nullptr)
            return;
        
        if (root->left != nullptr)
            inNodeBST(root->left, vec);
        vec.push_back(root->val);
        if (root->right != nullptr)
            inNodeBST(root->right, vec);
    }
public:
    int kthSmallest(TreeNode* root, int k) {
        vector<int> vec;
        inNodeBST(root, vec);
        
        return vec[k-1];
    }
};
