/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> vec;
        
        if (root == nullptr)
            return vec;
        
        queue<TreeNode*> q;
        q.push(root);
        int i = 0;
        
        while(!q.empty())
        {
            int count = q.size();
            vec.push_back(vector<int>());
            
            for(int j = 0; j < count; j++)
            {
                TreeNode *curr = q.front();
                q.pop();
                vec[i].push_back(curr->val);
                
                if (curr->left)
                    q.push(curr->left);
                if (curr->right)
                    q.push(curr->right);
            }
            i++;
        }
        return vec;
    }
};
